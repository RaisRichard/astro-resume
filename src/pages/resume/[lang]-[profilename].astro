---
import { getEntry, getEntries, getCollection } from "astro:content";
import Layout from "../../layouts/Layout.astro";
import {
	InfoDisplay,
	ListSection,
	LanguageSection,
	SkillsSection,
	InterestsSection,
	SignedSection,
	ProjectsSection,
} from "../../components";
import { translations } from "../../util/translations";

/**
 * This function gets called at build time on server-side to generate the list of paths.
 * Astro expects this function to return an array of possible values for `params`,
 * and gives the page specific props depending on the returned values.
 *
 * Profile IDs are in the format "lang/profilename", e.g. "en/john", and need to be mapped to the expected params.
 */
export async function getStaticPaths() {
	const profiles = await getCollection("profile");

	return profiles.map((profile) => {
		const [lang, ...slug] = profile.id.split("/");

		return {
			params: {
				lang,
				profilename: slug.join("/") || undefined,
			},
			props: {
				lang,
				profile,
			},
		};
	});
}

const { lang: language, profile } = Astro.props;
const displayCountry = language === "en"; // This could be improved

// There is seemingly no way to return specific messages from page generation in Astro, otherwise we could tell the user what went wrong
// Though this still narrows down TS types
if (language !== "en" && language !== "de") {
	// Language not supported
	return;
} else if (!profile) {
	// Profile not found
	return;
}

const info = await getEntry(profile.data.info);
const professionalExperience = await getEntries(
	profile.data.professionalExperience
);
const education = await getEntries(profile.data.education);
const training = await getEntries(profile.data.training);
const projects = await getEntries(profile.data.projects);
const languages = await getEntries(profile.data.languages);
const skills = await getEntries(profile.data.skills);
const interests = await getEntry(profile.data.interests);
---

<Layout title={info.data.fullName + " " + translations[language].cv}>
	<main itemscope itemtype="http://schema.org/Person">
		<div class="sheet">
			<div class="m-10 flex flex-col gap-2">
				<InfoDisplay {info} {displayCountry} withImage />
				<ListSection
					entries={professionalExperience}
					title={translations[language].professionalExperience}
					presentLabel={translations[language].present}
				/>
				<ListSection
					entries={education}
					title={translations[language].education}
					presentLabel={translations[language].present}
				/>
			</div>
		</div>
		<div class="sheet">
			<div class="m-10 flex flex-col gap-2">
				<ListSection
					entries={training}
					title={translations[language].training}
					presentLabel={translations[language].present}
				/>
				<ProjectsSection
					entries={projects}
					title={translations[language].projects}
				/>
				<SkillsSection
					entries={skills}
					title={translations[language].skills}
				/>
			</div>
		</div>
		<div class="sheet">
			<div class="m-10 grid grid-cols-2 gap-2">
				<LanguageSection
					entries={languages}
					title={translations[language].languages}
				/>
				<InterestsSection
					entry={interests}
					title={translations[language].interests}
				/>
				<div class="col-start-2 mt-2">
					<SignedSection {info} />
				</div>
			</div>
		</div>
	</main>
</Layout>
