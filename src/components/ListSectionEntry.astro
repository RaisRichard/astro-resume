---
import { type CollectionEntry } from "astro:content";

interface Props {
	entry: CollectionEntry<"education"| "professionalExperience">;
	presentLabel: string;
}

const { entry, presentLabel } = Astro.props;

interface RemappedEntry {
    label: string;
    place: string;
    city: string;
    country: string;
    startDate: {
        month?: number | string;
        year: number | string;
    };
    endDate?: {
        month?: number | string;
        year: number | string;
    };
}

let remappedEntry: RemappedEntry;

if (entry.collection === "education") {
    const data = entry.data;

    remappedEntry = {
        label: data.degree,
        place: data.school,
        city: data.city,
        country: data.country,
        startDate: {
            month: data.startDate.month,
            year: data.startDate.year,
        },
    };

    if (data.endDate) {
        remappedEntry.endDate = {
            month: data.endDate.month,
            year: data.endDate.year,
        };
    }
} else if (entry.collection === "professionalExperience") {
    const data = entry.data;

    remappedEntry = {
        label: data.position,
        place: data.company,
        city: data.city,
        country: data.country,
        startDate: {
            month: data.startDate.month,
            year: data.startDate.year,
        },
    };

    if (data.endDate) {
        remappedEntry.endDate = {
            month: data.endDate.month,
            year: data.endDate.year,
        };
    }
} else {
    throw new Error("Invalid collection");
}

if (remappedEntry.startDate.month as number < 10) {
    remappedEntry.startDate.month = "0" + remappedEntry.startDate.month?.toString();
}

if (remappedEntry.endDate && remappedEntry.endDate.month as number < 10) {
    remappedEntry.endDate.month = "0" + remappedEntry.endDate.month?.toString();
}

---

<div class="text-sm flex flex-col odd:bg-richblue-50 py-1 px-4">
	<div class="flex place-content-between">
		<h3 class="font-bold">{remappedEntry.label}</h3>
		<p class="">
			{remappedEntry.startDate.month}/{remappedEntry.startDate.year} - {
				remappedEntry.endDate
					? `${remappedEntry.endDate.month}/${remappedEntry.endDate.year}`
					: presentLabel
			}
		</p>
	</div>
	<div class="flex place-content-between">
		<p class="italic">{remappedEntry.place}</p>
		<p>
			{remappedEntry.city}, {remappedEntry.country}
		</p>
	</div>
</div>
